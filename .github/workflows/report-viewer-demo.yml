name: Report Viewer Demo Deployment

on:
  workflow_dispatch: # Use this to dispatch from the Actions Tab
  push:
    branches:
      - main
      
jobs:
  build-jar:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
        
      - name: Build Assembly
        run: mvn clean package assembly:single
        
      - name: Upload Assembly
        uses: actions/upload-artifact@v4
        with:
          name: "JPlag"
          path: "cli/target/jplag-*-jar-with-dependencies.jar"


  run-example:
    needs: build-jar
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
      
      - name: Get JAR
        uses: actions/download-artifact@v4
        with:
          name: JPlag
      
      - name: Copy and unzip submissions
        run: unzip ./.github/workflows/files/progpedia.zip
        
      - name: Rename jar
        run: mv *.jar ./jplag.jar
  
      - name: Run JPlag
        run: java -jar jplag.jar ACCEPTED -bc base -r example
      
      - name: Upload Result
        uses: actions/upload-artifact@v4
        with:
          name: "Result"
          path: "example.zip"
            

  build-and-deploy:
    needs: run-example
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4
              
      - uses: actions/setup-node@v4
        with:
          node-version: "18"
        
      - name: Set version of Report Viewer
        shell: bash
        run: |
          VERSION=$(grep "<revision>" pom.xml | grep -oPm1 "(?<=<revision>)[^-|<]+")
          MAJOR=$(echo $VERSION | cut -d '.' -f 1)
          MINOR=$(echo $VERSION | cut -d '.' -f 2)
          PATCH=$(echo $VERSION | cut -d '.' -f 3)
          json=$(cat report-viewer/src/version.json)
          json=$(echo "$json" | jq --arg MAJOR "$MAJOR" --arg MINOR "$MINOR" --arg PATCH "$PATCH" '.report_viewer_version |= { "major": $MAJOR | tonumber, "minor": $MINOR | tonumber, "patch": $PATCH | tonumber }')
          echo "$json" >  report-viewer/src/version.json
          echo "Version of Report Viewer:"
          cat report-viewer/src/version.json
      
      - name: Download Results
        uses: actions/download-artifact@v4
        with:
          name: Result
          path: report-viewer/public

      - name: Install and Build 🔧
        working-directory: report-viewer
        run: |
          npm install
          npm run build-demo
        
      - name: Deploy 🚀
        uses: JamesIves/github-pages-deploy-action@v4.6.3
        with:
          branch: gh-pages
          folder: report-viewer/dist
          repository-name: JPlag/Demo
          token: ${{ secrets.SDQ_DEV_DEPLOY_TOKEN }}
          clean: true
          single-commit: true
  
