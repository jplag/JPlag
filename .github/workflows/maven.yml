name: Build

on:
  push:
    paths:
      - ".github/workflows/maven.yml"
      - "**/pom.xml"
      - "**.java"
      - "**.g4"
      - "report-viewer/**"
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - ".github/workflows/maven.yml"
      - "**/pom.xml"
      - "**.java"
      - "**.g4"
  workflow_dispatch:

jobs:
  pre_job:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          concurrent_skipping: 'same_content_newer'
          skip_after_successful_duplicate: 'true'

  build-native-libs:
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    uses: ./.github/workflows/build-native-libraries.yml

  build:
    needs: [pre_job, build-native-libs]
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: 22
        distribution: 'temurin'

    - name: Download native libraries
      uses: actions/download-artifact@v4
      with:
        name: native-libraries-linux
        path: native-libraries

    - name: Install native libraries
      run: |
        # Copy tree-sitter core libraries
        mkdir -p language-tree-sitter-utils/src/main/resources/native/linux/
        cp native-libraries/language-tree-sitter-utils/src/main/resources/native/linux/* language-tree-sitter-utils/src/main/resources/native/linux/ || true
        
        # Copy tree-sitter-python libraries
        mkdir -p languages/python/src/main/resources/native/linux/
        cp native-libraries/languages/python/src/main/resources/native/linux/* languages/python/src/main/resources/native/linux/ || true
        
        echo "Native libraries installed successfully"

    - uses: actions/setup-node@v4
      with:
        node-version: "18"
    - name: Run Tests
      run: mvn verify -B -U

    - name: Build Assembly
      run: mvn -Pwith-report-viewer clean package assembly:single

    - name: Upload Assembly
      uses: actions/upload-artifact@v4
      with:
        name: "JPlag Jar"
        path: "cli/target/jplag-*-jar-with-dependencies.jar"


