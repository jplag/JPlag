name: Deploy to Maven Central & GitHub
on:
  workflow_dispatch:
  release:
    types: [created, published]
jobs:
  publish-maven-central:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-java@v5
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Set maven settings.xml
        uses: whelk-io/maven-settings-xml-action@v22
        with:
          servers: '[{ "id": "central", "username": "${{ secrets.CENTRAL_USER }}", "password": "${{ secrets.CENTRAL_TOKEN }}" }]'
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_KEY }}
      - name: Publish package
        run: mvn -P deployment -U -B deploy

  publish-release-artifact:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-java@v5
        with:
          java-version: '21'
          distribution: 'temurin'
      - uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Set version of Report Viewer
        shell: bash
        run: |
          VERSION=$(grep "<revision>" pom.xml | grep -oPm1 "(?<=<revision>)[^-|<]+")
          MAJOR=$(echo $VERSION | cut -d '.' -f 1)
          MINOR=$(echo $VERSION | cut -d '.' -f 2)
          PATCH=$(echo $VERSION | cut -d '.' -f 3)
          json=$(cat report-viewer/version/src/version.json)
          json=$(echo "$json" | jq --arg MAJOR "$MAJOR" --arg MINOR "$MINOR" --arg PATCH "$PATCH" '.report_viewer_version |= { "major": $MAJOR | tonumber, "minor": $MINOR | tonumber, "patch": $PATCH | tonumber }')
          echo "$json" >  report-viewer/version/src/version.json
          echo "Version of Report Viewer:"
          cat report-viewer/version/src/version.json

      - name: Build JPlag
        run: mvn -Pwith-report-viewer -U -B clean package assembly:single

      - name: Attach CLI to Release on GitHub
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: cli/target/jplag-*-jar-with-dependencies.jar
          fail_on_unmatched_files: true
